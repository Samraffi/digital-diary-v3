'use client'

import { memo } from 'react'
import { Territory } from '../types/territory'
import { useTerritoryContext } from '../providers/TerritoryProvider'
import { ProgressBar } from '@/shared/ui/ProgressBar'
import { TerritoryUpgradeSpinner } from './TerritoryUpgradeSpinner'

interface TerritoryCardProps {
  territory: Territory
  isAffected?: boolean
  isUpgrading?: boolean
  onUpgrade: (territory: Territory) => Promise<void>
}

function TerritoryCardComponent({
  territory,
  isAffected = false,
  isUpgrading = false,
  onUpgrade: onUpgradeProps
}: TerritoryCardProps) {
  const { activeEffects } = useTerritoryContext()

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
  const getTypeColor = () => {
    switch (territory.type) {
      case 'camp':
        return 'green'
      case 'mine':
        return 'blue'
      case 'village':
        return 'yellow'
      case 'fortress':
        return 'purple'
      case 'temple':
        return 'red'
      default:
        return 'primary'
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
  const getTypeIcon = () => {
    switch (territory.type) {
      case 'camp':
        return '‚õ∫'
      case 'mine':
        return '‚õèÔ∏è'
      case 'village':
        return 'üèòÔ∏è'
      case 'fortress':
        return 'üè∞'
      case 'temple':
        return 'üèõÔ∏è'
      default:
        return 'üèôÔ∏è'
    }
  }

  return (
    <div className="relative">
      <div
        className={`
          relative border rounded-lg p-4 shadow-sm transition-all duration-300
          ${isAffected ? 'territory-card-highlight' : ''}
          ${isUpgrading ? 'opacity-70' : 'hover:shadow-md'}
        `}
      >
        {/* –°–ø–∏–Ω–Ω–µ—Ä —É–ª—É—á—à–µ–Ω–∏—è */}
        <TerritoryUpgradeSpinner visible={isUpgrading} />

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex items-center justify-between mb-3">
          <h3 className="font-bold text-lg flex items-center gap-2">
            <span>{getTypeIcon()}</span>
            <span>{territory.name}</span>
          </h3>
          <span className="text-sm text-gray-500">–£—Ä–æ–≤–µ–Ω—å {territory.level}</span>
        </div>

        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–∑–≤–∏—Ç–∏—è */}
        <div className="mb-4">
          <div className="flex justify-between text-sm mb-1">
            <span>–†–∞–∑–≤–∏—Ç–∏–µ</span>
            <span>{territory.development}/{territory.maxDevelopment}</span>
          </div>
          <ProgressBar
            value={territory.development}
            max={territory.maxDevelopment}
            color={getTypeColor()}
          />
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-2 gap-2 mb-4 text-sm">
          <div>
            <span className="text-gray-500">–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ:</span>
            <span className="ml-1 font-medium">{territory.production?.gold || 0} üí∞</span>
          </div>
          <div>
            <span className="text-gray-500">–í–ª–∏—è–Ω–∏–µ:</span>
            <span className="ml-1 font-medium">{territory.production?.influence || 0} üëë</span>
          </div>
          <div>
            <span className="text-gray-500">–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å:</span>
            <span className="ml-1 font-medium">{territory.status?.stability || 0}%</span>
          </div>
          <div>
            <span className="text-gray-500">–°—á–∞—Å—Ç—å–µ:</span>
            <span className="ml-1 font-medium">{territory.status?.happiness || 0}%</span>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è */}
        <button
          onClick={() => onUpgradeProps(territory)}
          disabled={isUpgrading}
          className={`
            w-full py-2 px-4 rounded text-white font-medium transition-colors
            ${isUpgrading ? 'bg-gray-400 cursor-not-allowed' : 'bg-primary hover:bg-primary/90'}
          `}
        >
          {isUpgrading ? '–£–ª—É—á—à–µ–Ω–∏–µ...' : '–£–ª—É—á—à–∏—Ç—å'}
        </button>
      </div>
    </div>
  )
}

// –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–∏—à–Ω–∏—Ö —Ä–µ–Ω–¥–µ—Ä–æ–≤
export const MemoizedTerritoryCard = memo(TerritoryCardComponent)
